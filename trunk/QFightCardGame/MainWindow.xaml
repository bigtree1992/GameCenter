<Window x:Class="QGameCenterLogic.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:QGameCenterLogic"
        mc:Ignorable="d"
        Title="QFightCard" Height="720" Width="1280" 
        WindowStartupLocation="CenterScreen" Topmost="True"
        Focusable="True" AllowsTransparency="True" Background="Transparent">
    <Window.Resources>
        <Style TargetType="CheckBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <StackPanel Orientation="Horizontal">
                            <Grid Height="35" Width="35">
                                <Image x:Name="imageNoChecked" Source="Resources/Game/DisConnectBG.png" Height="35" Width="35" Margin="-10,-14,0,0" Stretch="Fill"/>
                                <Image x:Name="imageChecked" Source="Resources/Game/ConnectBG.png" Height="35" Width="35" Margin="-10,-14,0,0" Stretch="Fill"/>
                            </Grid>
                            <Label Content="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" />
                        </StackPanel>
                        <ControlTemplate.Triggers >
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="imageChecked" Property="Visibility" Value="Visible" />
                                <Setter TargetName="imageNoChecked" Property="Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="imageChecked" Property="Visibility" Value="Hidden" />
                                <Setter TargetName="imageNoChecked" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle1" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Transparent"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="1,1" StartPoint="1,1">
                        <GradientStop Color="Transparent" Offset="0"/>
                        <GradientStop Color="Transparent" Offset="0"/>
                        <GradientStop Color="Transparent" Offset="0"/>
                        <GradientStop Color="Transparent" Offset="0"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" CornerRadius="3">
                                <Grid Background="{TemplateBinding Background}" Margin="1">
                                    <Border x:Name="BackgroundAnimation" Background="Transparent" Opacity="0"/>
                                    <Rectangle x:Name="BackgroundGradient">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                <GradientStop Color="Transparent" Offset="0"/>
                                                <GradientStop Color="Transparent" Offset="0.375"/>
                                                <GradientStop Color="Transparent" Offset="0.625"/>
                                                <GradientStop Color="Transparent" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Rectangle x:Name="DisabledVisualElement" Fill="Transparent" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                            <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="Transparent" StrokeThickness="1"/>
                        </Grid>
                        <!--触发器-->
                        <ControlTemplate.Triggers>
                            <!--鼠标移入移出-->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>

                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>

                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <!--按钮按下弹起-->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="Yellow"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="False">
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <DockPanel LastChildFill="True">
            <Viewbox Stretch="Fill">
                <Canvas x:Name="ParentCanvas" HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="1280" Height="720">
                    <Canvas.Background>
                        <ImageBrush ImageSource="Resources/Game/background.png"/>
                    </Canvas.Background>
                    <Image x:Name="image" HorizontalAlignment="Left" VerticalAlignment="Top"  Width="1280" Height="720"/>
                    <Button x:Name="StartGameBtn" HorizontalAlignment="Left" VerticalAlignment="Top" Width="100" Height="100" Canvas.Left="440" Canvas.Top="578" Style="{StaticResource ButtonStyle1}">
                        <Button.Background>
                            <ImageBrush ImageSource="Resources/Game/StartGame.png"/>
                        </Button.Background>
                    </Button>
                    <Button x:Name="CloseGameBtn" HorizontalAlignment="Left" VerticalAlignment="Top" Width="100" Height="100" Canvas.Left="740" Canvas.Top="578" Style="{StaticResource ButtonStyle1}">
                        <Button.Background>
                            <ImageBrush ImageSource="Resources/Game/EndGame.png"/>
                        </Button.Background>
                    </Button>
                    <Button x:Name="CloseBtn" Click="CloseBtn_Click" HorizontalAlignment="Left" VerticalAlignment="Top" Width="38" Canvas.Left="1210" Canvas.Top="40" Height="40" Style="{StaticResource ButtonStyle1}"/>

                    <!--显示客户端是否掉线的Label-->
                    <Label x:Name="CheckLabel01" Content="客户端1掉线" Canvas.Left="22" Canvas.Top="170" Width="122" Height="23" FontSize="12" FontFamily="站酷高端黑" Foreground="Gray" Visibility="Hidden" Panel.ZIndex="3"/>
                    <Label x:Name="CheckLabel02" Content="客户端2掉线" Canvas.Left="22" Canvas.Top="200" Width="122" Height="24" FontSize="12" FontFamily="站酷高端黑" Foreground="Gray" Visibility="Hidden" Panel.ZIndex="3"/>
                    <Label x:Name="CheckLabel03" Content="客户端3掉线" Canvas.Left="22" Canvas.Top="230" Width="122" Height="24" FontSize="12" FontFamily="站酷高端黑" Foreground="Gray" Visibility="Hidden" Panel.ZIndex="3"/>


                    <Image Source="Resources/Game/DisConnectBG.png" Visibility="Visible" Name="StartShow01" Stretch="Fill" Canvas.Left="22" Canvas.Top="635" Height="50" Width="60"/>
                    <Image Source="Resources/Game/DisConnectBG.png" Visibility="Visible" Name="StartShow02" Stretch="Fill" Canvas.Left="62" Canvas.Top="635" Height="50" Width="60"/>
                    <Image Source="Resources/Game/DisConnectBG.png" Visibility="Visible" Name="StartShow03" Stretch="Fill" Canvas.Left="102" Canvas.Top="635" Height="50" Width="60"/>

                    <CheckBox x:Name="checkBox1" Canvas.Left="3" Canvas.Top="170" Height="23" Width="26" IsEnabled="False" IsChecked="False" Visibility="Hidden"/>
                    <CheckBox x:Name="checkBox2" Canvas.Left="3" Canvas.Top="200" Height="23" Width="26" IsEnabled="False" IsChecked="False" Visibility="Hidden"/>
                    <CheckBox x:Name="checkBox3" Canvas.Left="3" Canvas.Top="230" Height="23" Width="26" IsEnabled="False" IsChecked="False" Visibility="Hidden"/>
                </Canvas>
            </Viewbox>
        </DockPanel>
    </Grid>
</Window>
